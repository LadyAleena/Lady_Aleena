=pod

=encoding utf8

=head1 NAME

B<Page::Columns> generates a number for getting columns based on exponential numbers.

=head1 VERSION

This document describes Page::Columns version 1.0.

=head1 SYNOPSIS

  use Util::Colums qw(number_of_columns);
  my @colors = ('red', 'orange', 'yellow', 'spring', 'green', 'teal', 'cyan', 'azure',
                'blue', 'violet', 'magenta', 'pink', 'white', 'black', 'gray');

  my $maximum_amount_of_columns = 4;
  my $amount_of_items_on_list  = \@colors;
  my $number_word_returned     = 'no';

  my $columns = number_of_columns($maximum_amount_of_columns, $amount_of_items_on_list, $number_word_returned);
  # 3

=head1 DESCRIPTION

C<number_of_columns> must be imported into your script and takes three parameters.

The first parameter is the maximum amount of columns allowed.

The second parameter is the amount of items, in the synopsis I used a list.

The third parameter is the option to return a number word instead of an integer, which can ignored.

The returned number is the amount of columns. The amount of columns is calculated using exponents. For example, if your list has 4 items, 2 will be returned. It will not go up to 3 until your list has 9 items on it. If your list has 100 items, 10 will be returned. The longer your list is, the more columns will be returned until the maximum amount of columns is reached.

=head1 DEPENDENCIES

Page::Columns depends on L<Lingua::EN::Inflect> and L<Exporter>.

=head1 AUTHOR

Lady Aleena

=head1 LICENSE AND COPYRIGHT

This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See L<perlartistic>.

Copyright Â© 2020, Lady Aleena C<(aleena@cpan.org)>. All rights reserved.

=cut
